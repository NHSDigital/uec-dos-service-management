name: Pipeline Cleardown Application Development Environment

on:
    delete
jobs:
  destroy:
    if: github.event.ref_type == 'branch' && startswith(github.event.ref, 'task/')
    runs-on: ubuntu-latest
    steps:
      - name: Clean up
        run: |
          echo "Ref for a branch deletion: ${{ github.event.ref }}"
          echo "Ref type for a branch deletion: ${{ github.event.ref_type }}"
  validate-terraform:
        name: Validate terraform code
        uses: ./.github/workflows/validate-terraform.yaml
        needs: derive-tf-versions
        with:
          ENV: dev
          tf_vers: ${{needs.derive-tf-versions.outputs.maxVersion}}
        secrets: inherit
  derive-tf-versions:
    uses: ./.github/workflows/derive-tf-version.yaml
  get-metadata:
    runs-on: ubuntu-latest
    outputs:
      build_datetime: ${{ steps.metadata.outputs.build_datetime }}
      build_timestamp: ${{ steps.metadata.outputs.build_timestamp }}
      build_epoch: ${{ steps.metadata.outputs.build_epoch }}
    steps:
      - id: metadata
        run: |
          datetime=$(date -u +'%Y-%m-%dT%H:%M:%S%z')
          echo "build_datetime=$datetime" >> $GITHUB_OUTPUT
          echo "build_timestamp=$(date --date=$datetime -u +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
          echo "build_epoch=$(date --date=$datetime -u +'%s')" >> $GITHUB_OUTPUT
          echo "triggering action: ${{ github.event_name }}"
          echo "ref type: ${{ github.ref_type }}"
          echo "triggering reference: ${{ github.ref_name }}"
  deploy-application-infrastructure:
      needs:
        [
          validate-terraform,
          derive-tf-versions,
        ]
      uses: ./.github/workflows/action-infrastructure-stack.yaml
      with:
        github_environment: dev
        stack: application
        action: plan
        tf_vers: ${{needs.derive-tf-versions.outputs.maxVersion}}
      secrets: inherit
  deploy-support-tools-infrastructure:
      needs:
        [
          validate-terraform,
          derive-tf-versions,
        ]
      uses: ./.github/workflows/action-infrastructure-stack.yaml
      with:
        github_environment: dev
        stack: support_tools
        action: plan
        deployment_workspace: default
        tf_vers: ${{needs.derive-tf-versions.outputs.maxVersion}}
      secrets: inherit
