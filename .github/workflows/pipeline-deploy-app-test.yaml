name: Pipeline Deployment Application Test Environment

on:
  workflow_call:
    inputs:
      git_tag:
        description: "Defines git commit tag to be used for deployment"
        required: true
        type: string

jobs:
  metadata:
    name: "Get Metadata"
    uses: NHSDigital/uec-dos-management/.github/workflows/metadata.yaml@v0.5
  deploy-application-infrastructure:
    needs:
      [
        metadata,
      ]
    uses: NHSDigital/uec-dos-management/.github/workflows/deploy-infrastructure.yaml@v0.5
    with:
      environment: test
      domain: "uec-dos-service-management"
      workspace: ${{ needs.metadata.outputs.workspace }}
      stacks: "['application']"
      action: apply
    secrets: inherit
  deploy-support-tools-infrastructure:
    uses: ./.github/workflows/action-infrastructure-stack.yaml
    with:
      github_environment: test
      stack: support_tools
      action: plan
      deployment_workspace: default
    secrets: inherit
  build-and-deploy-application-code:
    runs-on: ubuntu-latest
    environment: test
    permissions:
      id-token: write
      contents: read
    needs:
      [
        deploy-application-infrastructure,
        derive-deployment-workspace,
      ]
    strategy:
      matrix:
        service-name:
          - healthcare-services-data-manager
          - locations-data-manager
          - organisation-affiliations-data-manager
          - organisations-data-manager
          - questionnaire-responses-data-manager
          - questionnaires-data-manager
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.git_tag }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/uec-dos-service-management-github-runner
          role-session-name: github-pipeline-session
          aws-region: ${{ vars.AWS_REGION }}

      - name: Build and deploy application code
        run: |
          export SERVICE_NAME=${{ matrix.service-name }}
          export DEPLOYMENT_WORKSPACE=${{ needs.derive-deployment-workspace.outputs.deployment_workspace }}
          /bin/bash ./scripts/app-build-deploy.sh
  integration-test:
      needs:
        [
          deploy-application-infrastructure,
          build-and-deploy-application-code,
          derive-deployment-workspace,
        ]
      name: Run integration tests
      uses: ./.github/workflows/integration-test.yaml
      with:
        github_environment: test
        DEPLOYMENT_WORKSPACE: ${{ needs.derive-deployment-workspace.outputs.deployment_workspace }}
      secrets: inherit




